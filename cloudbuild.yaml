steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}', '.']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}']

  # Deploy container image to Cloud Run Region 1
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'deploy', '${_SERVICE_NAME}',
           '--image', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}',
           '--region', '${_REGION_1}',
           '--allow-unauthenticated']

  # Build the integration test container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME_TESTS}', './integ_tests']

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME_TESTS}']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'deploy', '${_SERVICE_NAME}',
           '--image', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME_TESTS}',
           '--region', '${_REGION_1}']

  # Deploy container image to Cloud Run Region 2
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'deploy', '${_SERVICE_NAME}',
           '--image', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}',
           '--region', '${_REGION_2}',
           '--allow-unauthenticated']

substitutions:
  _IMAGE_NAME: python_flask_app_image
  _IMAGE_NAME_TESTS: python_flask_app_tests_image
  _SERVICE_NAME: python-flask-service
  _REGION_1: us-east1
  _REGION_2: us-central1

images:
  - gcr.io/$PROJECT_ID/${_IMAGE_NAME}
  - gcr.io/$PROJECT_ID/${_IMAGE_NAME_TESTS}